.\" 
.TH "gtmess" "1" "December 16, 2011" "" "gtmess messenger"
.SH "NAME"
gtmess \- MSN messenger client

.SH "SYNOPSIS"
gtmess [options]

.SH "DESCRIPTION"
.PP 
gtmess is an MSN messenger client, which allows you to use
the MSN messenger service. It is a console application that
uses the curses library to present a friendly user interface.
This manpage corresponds to version 0.97.

.SH "OPTIONS"
.TP 
.BR \-h ", " \-\-help
Short help.

.TP 
.BI \-O variable = value
Assigns the
.I value
to the configuration
.BR variable .

.TP 
.BI \-\-version
Print the program version and CVR string to stdout and exit.

.SH "CONFIGURATION VARIABLES"
The following list shows all configuration variables in alphabetic order.
The value of a variable is either an integer or a (line\-terminated) 
string of characters.
In the following descriptions,
.I N
represents an integer value,
.I S
represents a character string value and
.I B
represents a boolean value, a special case of an integer value 
with only two possible values, 0 and 1. 1 stands for True and 0 for False.

.TP 
.BI aliases "" = N
When
.I N
is 
.BR 2 , 
the user\-defined contact aliases are displayed instead of nick names.
A value of 
.B 1 
displays aliases only when nicknames are too long (see
.B max_nick_len
variable) or when nicknames contain the email address (which is very irritating).
A value of 
.B 0 
disables the use of aliases completely and nick names are always
displayed. User\-defined contact aliases are stored into 
.I ~/.gtmess/aliases 
(see the
.B FILES
section). This variable affects the use of aliases everywhere but the notification
window. See also the
.B notif_aliases
variable. The default value is
.BR 1 .

.TP 
.BI auto_cl "" = B
When enabled, the contact list is selected automatically when the last chat window closes.
The default value is
.BR 1 .


.TP 
.BI auto_login "" = B
When enabled, the login procedure starts as soon as the client is invoked,
provided that
.B login
and
.B password
variables are nonempty.
The default value is
.BR 1 .

.TP 
.BI cert_prompt "" = B
If enabled and a certificate cannot be verified against
the list of trusted certificate authorities (see the
.B FILES
section),
the user is asked if the login process should continue. 
Three options are given,
.BR Yes ,
.B No
and
.BR Always .
The meaning of each option is obvious.
The login procedure requires more than one SSL connection, so option
.B Always
means that successive SSL connections will also continue upon unverified certificates.
If this option is disabled, then the procedure always continues without asking the user, 
even if certificates cannot be verified.
The default value is
.BR 1 .

.TP 
.BI colors "" = N
Sets initial color mode.
Possible values are 
.BR 0 , 
.B 1 
or 
.BR 2 . 
With 
.BR 0 , 
color is selected automatically
(according to curses). 
.B 1 
forces color mode, while 
.B 2 
forces black and white.
The default value is
.B 0
(automatic).

.TP 
.BI common_name_prompt "" = B
Like
.BR cert_prompt ,
the user is asked if the login process should continue,
when the common name does not match the host name upon
the initialization of an SSL connection.
The default value is
.BR 1 .

.TP 
.BI console_encoding "" = S
Sets the character encoding to be used for displaying the text on the console.
.I S
is the name of the encoding. To see all valid encoding names, look at
the output of the
.IR "iconv \-l" " command"
(on systems that provide it). If
.I S
is
.B *locale*
then the console encoding is that of the 
.IR LC_CTYPE 
property of the current locale.
The default value is
.BR *locale* .

.TP 
.BI cvr "" = S
Sets the consumer versioning (CVR) string that is sent to the server during
the login process. This string provides information about the client. For more
information you should look at the protocol specification. The protocol requires
(from version MSNP8 and above) your login account to be the last part
of the CVR string. Since gtmess uses MSNP9, your login account 
is appended automatically at the end.
The default value is computed at configure\-time and is of the following form:
.br 
0x0409 <system> <os\-version> <architecture> GTMESS <clientversion> MSMSGS
.br 
For example:
.BR "0x0409 Linux 2.6.8\-1\-686 i686 GTMESS 0.9 MSMSGS" .

.TP
.BI err_connreset "" = B
Ignore `Connection reset by peer' error messages in chat windows. These messages
may occur very often as the server closes inactive connections. Therefore,
they are not displayed by default.

.TP 
.BI force_nick "" = S
The nickname chosen by the user is not stored permantently on the server any more,
due to protocol changes concerning MSNP12. When this option is set, gtmess sets
the nickname to
.IR S
just after login. By default, this option is not set (empty string) which
means that gtmess will not force a nickname change upon login. In this case
the server will provide the stored nickname which could be either a proper nickname
(which was stored by some msn client supporting a newer protocol version) or
a nickname consisting of the email address of the account.


.TP 
.BI gtmesscontrol_ignore "" = S
Ignore gtmess\-specific messages that are substrings of
.IR S "."
To accept all such messages, leave
.I S
empty. To ignore all such messages, use the special value
.BR *all*. 
By default, all such messages are accepted.

.TP 
.BI idle_sec "" = N
If greater than zero, specifies how many seconds should pass
without the user pressing any key before his/her status is automatically
set to Idle. If
.I N
is zero, this feature is disabled. Note that the status is automatically
set to Idle only if the previous status is Online.
The default value is
.BR 180 .

.TP 
.BI initial_status "" = N
Sets the initial status after login. For the MSN Messenger protocol
.I N
can be a number from 0 to 8 representing the following statuses:
.BR 0 " =" 
.IR Offline , 
.BR 1 " ="
.IR "Appear Offline" , 
.BR 2 " ="
.IR Online ,
.BR 3 " ="
.IR Idle ,
.BR 4 " ="
.IR Away ,
.BR 5 " ="
.IR Busy ,
.BR 6 " ="
.IR "Be Right Back" ,
.BR 7 " ="
.IR "On the Phone" ,
.BR 8 " ="
.IR "Out to Lunch" .
.br 
The default value is
.B 2
(Online).

.TP 
.BI invitable "" = B
If disabled, others cannot invite you to conversation windows because
the client does not respond to the invitations they send. So, if you
want to chat, you have to invite others to the conversation windows yourself.
If enabled, then gtmess automatically accepts invitations to switchboard
sessions. Note that this option overrides the 
.I BLP 
setting which is stored
at the server and is about users not on your forward list.
This option is enabled by default.

.TP 
.BI keep_alive "" = N
If greater than zero, the client sends a ping request in every 
.I N
seconds. This will help to keep the connection alive on some networks.
The default value is
.BR 60 .
Note that due to changes in the protocol, the server is more willing to close
inactive connections. You are not advised to set this option too low.

.TP 
.BI login "" = S
Sets the default login account. If
.I S
does not contain an `@' character, then the string 
.I @hotmail.com
is appended.

.TP 
.BI log_traffic "" = B
If enabled, network traffic between the client and the notification
server is recorded into file 
.IR ~/.gtmess/msn.log .
The default value is
.BR 0 .

.TP 
.BI log_console "" = N
Sets console logging level. 
.B 0 
disables logging, 
.B 1 
enables switchboard window logging,
.B 2 
enables notification window logging, and 
.B 3 
enables both. Log files are stored into
.IB ~/.gtmess/ account /log/
in a per\-contact scheme. The notification window messages are stored in the special
file
.IR _nserver.log .
This option is disabled by default.

.TP 
.BI max_nick_len "" = N
Specifies the maximum allowed nickname length before displaying the alias.
If
.I N
is 
.BR 0 , 
then aliases are displayed only if the nickname does not fit on a single
line of the contact list window.
The default value is
.BR 0 .

.TP 
.BI max_retries "" = N
Due to a strange bug of gtmess (or maybe feature of the openssl library),
you frequently get `socket read error' upon initial login attempts.
The error seems to go away just by retrying. Gtmess will retry
.I N
more times, before giving up. The default value is
.BR 4 .

.TP 
.BI msg_debug "" = N
Defines the client behavior on unrecognized messages. If
.I N
is 
.BR 0 , 
then those messages are silently ignored.
If
.I N
is 
.BR 1 , 
then the type of the message is displayed, and if
.I N
is 
.BR 2 , 
the whole message is displayed. This option
is useful for development purposes.
The default value is
.BR 0 .

.TP 
.BI msg_notify "" = N
If
.I N
is greater than 
.BR 0 , 
gtmess notifies you when a new message is received even
when the corresponding chat window is in the foreground. This
feature is useful in graphical environments where the gtmess (console) window 
may not be visible all the time. However, you will not be notified
if less than
.I N
seconds have passed since the previous message. This is to avoid
too many notifications that might be annoying. In fact, if
.I N
is 
.BR 1 , 
then the extra notification will occur only when the user is
in Idle mode.
The default value is
.B 1.

.TP 
.BI msnftpd "" = N
Specifies the port number the MSNFTP server is listening to.
The MSNFTP server is a thread that runs in the background and enables
outgoing file transfers by allowing incoming connections. A value
of 
.B 0 
disables the server.
The default value is
.BR 6891 .

.TP 
.BI nonotif_mystatus "" = N
Specifies a set of statuses that the user may be in without receiving any sound
or popup notifications. For example, if a user is Busy, having notification
windows pop up all the time might be annoying. Each status corresponds to
a bit of
.I N
in the order presented in the paragraph describing
.BR initial_status .
The default value is
.B 368
which stands for the set of statuses {Away, Busy, Be-Right-Back, Out-To-Lunch}, as its
binary representation is 
.IR 101110000 .

.TP 
.BI notif_aliases "" = N
This variable has exactly the same meaning as the
.B aliases
variable. It affects the use of aliases in the notification window.
The default value is
.BR 0 .

.TP 
.BI online_only "" = B
If enabled, only contacts with online status are shown on the screen.
The default value is
.BR 0 .

.TP 
.BI password "" = S
Sets the default password. The password should be given in obfuscated form. See
.B Options/Password
for more information.

.TP 
.BI passp_server "" = S
This option caches the default passport login server, which by default is
.BR login.live.com/login2.srf ,
in order to speed-up the login process.
When this option is set to the empty string, a server will be requested from
.IR nexus.passport.com .

.TP 
.BI popup "" = B
Enables/disables the popup notification window, each time launching the script
defined by the
.B pop_exec 
variable. The default value is
.BR 1 .

.TP 
.BI pop_exec "" = S
Sets the script to be used for notification windows. 
For Linux systems, the default
value is
.B which notify-send >/dev/null 2>&1 && notify-send gtmess '%s' > /dev/null 2>&1
which corresponds to the freedesktop.org notification scheme. For Darwin/MacOS
the default value is
.B which -s growlnotify && growlnotify -a gtmess -t '%s' -m gtmess
which makes use of the Growl notification system.
The provided  
.I gtmess\-notify 
script (see also the corresponding manpage) can be launched by specifying the following string:
.BR "test -n \(dq$DISPLAY\(dq && which notify-send > /dev/null 2>&1 && notify-send gtmess '%s' > /dev/null 2>&1" .
In this case, make sure that 
.I gtmess-notify 
is already running (that is 
.I notify.pip 
is opened
for reading), otherwise an attempt
to write to 
.I notify.pip 
will block!

Note that this string will be passed to system() and
only a single `%s' is allowed which will be substituted
with the message string. Single quotes in the message string will be replaced by spaces.
Leaving this variable empty is another way to disable popups.

.TP 
.BI safe_history "" = B
Enables/disables safe history browsing for the editboxes. When enabled and
the editbox contains text that does not exist in the history buffer, the
history browsing (up/down arrows) is disabled. This is to prevent the user from
inadvertently pressing the arrow keys and losing some recently typed text.
The default value is
.BR 1 .

.TP 
.BI safe_msg "" = N
Prevents the user from inadvertently closing a chat window containing
very recent messages. It does so by not allowing the user to close a window 
when there are messages
that have appeared during the last
.IR N +1
seconds. A value of 
.B -1 
disables this option. The default value is
.BR 0.

.TP 
.BI server "" = S
Sets the initial server to connect to. For the MSN Messenger protocol,
this can be a dispatch or a notification server.
.I S
is of the form
.I R hostname [ :port ].
If port is not specified, 1863 is assumed.
The default value is 
.BR messenger.hotmail.com .

.TP 
.BI skip_says "" = N
Skips subsequent `..... says:' prefixes in a chat window from the same user, 
when the user messages are less than
.I N
seconds apart. The purpose of this option is to allow for more text in the
chat window suppressing redundant prompts. The default value is
.BR 20. 

.TP 
.BI snd_dir "" = S
Sets the location of the sound effect (.wav) files. The default
value is
.B *data*
which corresponds to the
.I snd/
directory in the data prefix, usually
.BR /usr/local/share/gtmess .

.TP 
.BI snd_exec "" = S
Sets the playback program for the sound effects. The default
value on Linux systems is
.B /usr/bin/aplay -Nq %s > /dev/null 2>&1 &
which corresponds to the playback utility of the ALSA system.
On Darwin/MacOS systems, the default value is
.B /usr/bin/afplay %s > /dev/null 2>&1 &
which corresponds to the system's audio playback utility.
Note that this string will be passed to system() and
only a single `%s' is allowed which will be substituted
with the full path of the audio file.
An empty string disables this option (which is equivalent to setting
.B sound
to
.BR 0 ).

.TP 
.BI sound "" = N
Sets sound mode.
.I N
can be 
.BR 0 ", " 1 ", " 2 ", " 3 " or " 4 . 
.B 0 
disables all sound, 
.B 1 
produces always a (console) beep,
while 
.B 2 
plays sound effects (using the external command defined by
.BR snd_exec ).
Value 
.B 3 
produces pcspeaker sounds using the external program 
.IR beep,
and value 
.B 4 
produces pcspeaker sounds by directly accessing
the speaker on linux systems. However, this last option requires special
privileges and might not work at all, or work only as root. It works
in linux VTs, however (i.e., ctrl-alt-F1).
The default value is
.B 1
(beep).
There are 6 sound effects that correspond to various events (guess from the name):
.IR online.wav ,
.IR offline.wav ,
.IR newemail.wav ,
.IR type.wav ,
.IR ring.wav ,
.IR meout.wav .

.TP 
.BI syn_cache "" = B
If enabled, the contact/group lists are cached for future use. This option
seems to have no meaning nowadays, as the msn server always rejects the cached version
of the list. It has been disabled in this version of the client and may be removed
completely in the future.
The default value is
.BR 0 .

.TP 
.BI time_user_types "" = N
Sets how often typing notifications are sent. It is the time interval in seconds.
The default value is
.BR 5 .

.TP 
.BI update_nicks "" = N
Sets how the nicknames are updated on the msn server. 
When a contact is initially online or changes his/her nickname while online, the server
lets you know about his/her nickname. Gtmess uses the new nickname when provided,
otherwise it uses the last nickname stored on the server (on your forward list). 
A value of 
.B 0 
never updates
nicknames, and a value of 
.B 2 
always updates modified nicknames upon logout.
A value of 
.B 1 
updates nicknames only if they do not contain the email address.
Note that you can always update the nickname of a specific contact manually (rename function).
The default value is
.BR 0 .

.TP 
.BI url_exec "" = S
Sets the command line for the url browser. This typically launches
a web browser to open urls that a users sends to you. Those urls are automatically
parsed and displayed in the transfers window. The default
value is
.B opera --remote 'openURL(%s,new-page)' >/dev/null 2>&1 &
for Linux, which corresponds to opening the url using the Opera web browser.
Under Darwin/MacOS, the default value is
.B /usr/bin/open '%s' > /dev/null 2>&1
which will open the url with the default web browser.
As in 
.BR snd_exec ,
only one occurrence of `%s' is allowed that will be replaced by the url.
An empty string disables this option.


.SH "USER INTERFACE"
.PP 
The screen is divided in 7 parts. Four lines and three windows.

The first line of the screen displays your nickname, your account and
your status. The right\-hand corner shows the system's clock (local time).

The bottom line displays the copyright string and the menus 
or the input boxes.

On the right is the contact list window. On the left of the contact list
window is the switchboard (chat) window. Right below the switchboard window
is the messages or notification window. 
This window displays various messages and errors
from the operating system, as well as the notification server. 

The switchboard
window is separated from the messages window by two lines. The first line
is the editbox where you type your text when you chat. 
The second line is a kind of window\-bar that displays a character for each open 
switchboard window. The window bar is displayed in three different modes, depending
on the number of open switchboard windows:

.TP 
.B Text
In this mode, each window is represented by the name of the first contact
that joined it. The name of the selected sb window (which is displayed on top)
is enclosed in square brackets. Braces instead of square brackets
denote that the window has unread messages (something got typed in the window while
it was in the background and the user has not seen it yet).

.TP 
.B Icons
The selected switchboard window is represented
with an `O'. A `\-' represents a switchboard window that is open but not
on the foreground, while a `+' means additionally that the designated
window has unread messages .

.TP 
.B Stats
If there are too many open windows, then the window bar displays
only the number of the current window. It also displays how many
windows exist on the left and on the right of the current one and how many
of them have unread messages. The 5 numbers displayed correspond to these
quantities respectively: left_unread, left, current, right_unread, right.

.PP 
In the following description of the keyboard controls, `^' denotes holding CTRL, while
`$' denotes holding SHIFT. `@' denotes holding ALT (or mod1 or pressing ESC
first).

.SS MENUS

.PP 
The functions of the main menu can be accessed by pressing ESC or F9 first, 
or by holding down the default modifier key (ALT) and then pressing one
of the following keys (case insensitive):

.TP 
.B C
Connect to server

.TP 
.B S
Change status

.TP 
.B L
Manage contact/group lists

.TP 
.B V
Server functions

.TP 
.B O
Options

.TP 
.B I
Invite a contact from your Forward List to the active switchboard window. This
is actually a shortcut for 
.I R "" Alt\-L\-F\- contact \-I,
although only online contacts are shown. An alternative way to invite a contact
is to first enter contact list mode by pressing TAB and then pick a contact
by pressing ENTER on it.

.TP 
.B T
Write a note in the notification window

.TP 
.B Q
Quit the program

.TP 
.B /
Enter special client command (try "help" to see a list). This function
presents a simple command-line interface to gtmess. This feature, although
now in preliminary form, is intended to provide scripting capabilities in future
versions.

.PP 
The shortcut key for the menu is shown underlined. Some menu
entries may display a nested menu. Only selected menu entries are
explained in this document:

.TP
.B Lists
List management. There are four lists in this protocol version.
Forward List (FL) which is your contact list, Allow List (AL) that
contains contacts that can see your online presence (normally AL contains
most of your FL),
Block List (BL) that contains blocked contacts and finally, Reverse List (RL)
that contains those who have added you in their forward list. 
When you are working with lists, you are presented with a contact selection menu.

.TP
.B Lists/Forward/Block
add contact to BL and remove from AL
.TP 
.B Lists/Forward/Unblock
add contact to AL and remove from BL
.TP
.B Lists/Forward/Rename
change the name of the contact (see also the
.B update_nicks
variable)
.TP 
.B Lists/Forward/Ungroup
remove contact from all groups (a contact may belong to no particular group)
.TP 
.B Lists/Forward/Copy
the contact to another group
.TP
.B Lists/Forward/Move
the contact to a different group
.TP
.B Lists/Forward/Invite
the contact to the current switchboard session
.TP
.B "Lists/Forward/Per-contact settings"
Manage contact-specific settings. Currently
there are two settings for each contact.
.B Notifications
(enabled by default)
toggles the popup windows and sound effects
for the selected contact (i.e., when somebody keeps logging in
and out, it can be quite irritating).
.B Ignored
option (disabled by default) causes gtmess to ignore the contact's
requests to start a chat with you. 
It might appear to the other party that there is
no response from the network. In this mode, conversations
can be initiated only by yourself. 
.TP
.B Lists/Reverse/Add
the contact to your forward list, too
(usually you 'll do this just after somebody has added you 
to his/her forward list)
.TP
.B Lists/Reverse/Block
the contact
(you don't have to add the contact to your forward list if you don't want to,
you can block him/her instead)
.TP
.B Lists/Pending
In this list you manage pending add requests.
.TP
.B Lists/Group/Empty
remove all contacts in a group (use with care!)
.TP
.B Lists/Add
a new contact or create a new group
.TP
.B "Lists/Export aliases"
export the forward list into 
.B ~/.gtmess/aliases 
so that you can edit it
.TP
.B "Lists/Clean up"
helps you remove obsolete entries from your contact lists. Shows
which contacts have removed you from their contact list, so that there is no
point in having them in your FL, AL and BL. Note that this is 100% accurate anymore,
due to protocol changes.
Consequently, you can having some contact in your FL while not in RL. Having
a contact in your AL while not in RL may be pointless unless you have disabled the
"All others" (BLP) flag. Similarly, having a contact in your BL while not in RL might
have no meaning, unless you have the BLP flag enabled and that contact is disturbing you.
Ideally, there should hold AL \+ BL \= RL, that is each contact in the reverse list
is either blocked or allowed. Occasionally, you will have same PL (Pending List) requests
that you must decide whether to add or block.

.TP
.B "Server/Nickname"
set the nickname

.TP
.B "Server/Personal msg"
set the Personal Message, usually displayed after the nickname

.TP
.B "Server/RL Prompt"
prompt when others add you to their forward list. This option is stored
on the server.

.TP
.B "Server/All others"
allow others (not on your forward list) to start conversations with you. This
is also referred to as the BLP flag. This option is stored on the server.

.TP
.B "Options/Variables"
set the value of a configuration variable; takes effect immediately

.TP
.B Options/Query
all configuration variables

.TP
.B Options/Write
configuration variables into 
.BR ~/.gtmess/config ; 
in fact, only those variables with values other than the default are written

.TP
.B Options/Password
Obfuscates the given password, so that you can store it in the configuration
file. While this cannot be considered SAFE, it would prevent someone
from stealing your password just by looking in your configuration file for a few
seconds.

.TP
.B "Options/(1)-(6) Sound test"
By pressing the number keys `1' to `6', you can test the different sound
effects.
 
.SS MENU NAVIGATION (F9)
.TP
.BR "[] " or " arrow left/right"
previous/next entry
.TP
.BR "{} " or " home/end"
first/last entry
.TP
.BR "<> " or " PgUp/PgDn"
page up/down (skip many entries)
.TP
.B "ENTER/SPACE"
select
.TP
.B SPACE
check (for checkable items)
.TP
.B "-/ESC/BACKSPACE"
cancel or return to parent menu
.TP
.B "underlined letter"
shortcut for selection
.TP
.B F9
cancel all menus (no return to parent)

.SS SWITCHBOARD (chat window) CONTROLS

.TP 
.B ^N
new switchboard (chat) session

.TP 
.B ^W
leave current switchboard session and close the window

.TP 
.B ^X
leave current switchboard session, but keep the window open

.TP
.B TAB
toggle between chat windows and contact list menu

.TP 
.B F1
previous switchboard session

.TP 
.B F2
next switchboard session

.TP 
.B F3
next switchboard session that has unread messages

.TP 
.B PgUp/F7
scroll down switchboard window

.TP 
.B PgDn/F8
scroll up switchboard window

.TP 
.B @F7
participant list scroll down (participants in chat session)

.TP 
.B @F8
participant list scroll up

.SS CONTACT LIST MENU MODE

.TP 
.BR ] " or " "arrow DOWN"
next contact

.TP 
.BR [ " or " "arrow UP"
previous contact

.TP 
.B ^N
new switchboard (chat) session

.TP 
.B ^W
leave current switchboard session and close window

.TP
.B i
invite contact to current session (i.e. after ^N)

.TP
.B I
invite contact to current session & leave menu

.TP
.B q
contact information

.TP
.B m
invoke a context menu regarding the selected contact

.TP
.B ENTER/SPACE
new chat session & invite contact & leave menu

.TP
.B "+/b"
block/unblock contact

.TP
.B ":"
toggle ignore contact

.TP
.B "TAB"
toggle between chat windows and contact list menu

.TP
.B PgUp/F7
contact list scroll down

.TP
.B PgDn/F8
contact list scroll up


.SS SWITCHBOARD TEXT INPUT

.PP 
Type any string and press enter to send it to server (talk).
While you are typing, typing notifications are being sent in 
.B time_user_types
sec intervals.
If the string you type begins with `/', then it forms a special command 
(and typing notifications are not being sent while you are typing it).
.br 
Type `//' if you want to send a message with one `/' in the beginning.

.SS SWITCHBOARD COMMANDS

.TP 
.BI "/ " string
This command sends
.I string
to the server without a typing notification. This actually happens
because the string gets typed in command\-entry mode (`/'). Note that there is
a space after the first slash.

.TP 
.BI "/send " string
Send a raw command string to server.

.TP 
.BI "/invite " useraccount
Invite the user with account
.I useraccount
to join the switchboard session. You can also use the shortcut
.B /i
for this command. Example:
.br 
.B /i myfriend@hotmail.com

.TP 
.BI "/spoof " fake
Send a fake typing notification from user
.IR fake .

.TP 
.BI "/file " filename
Send a request to send the file
.IR filename .

.SS GTMESS SPECIFIC SWITCHBOARD COMMANDS

.TP 
.B /beep
Send a beep to others so that everybody pay attention.

.TP 
.B /gtmess
Tell everybody you are using gtmess.

.TP 
.BI "/msg " text
Send a message to other gtmess users. The message appears on their notification window.

.TP 
.BI "/dlg " text
Send a message to other gtmess users. The message appears on their switchboard window.

.SS MISCELLANEOUS CONTROLS

.TP 
.B ^L
redraw screen from scratch

.TP 
.B ^G
produce a console beep

.TP 
.B ^F
toggle display of offline contacts

.TP 
.B ?
mini help

.TP 
.B F4
display / hide the transfers window

.TP 
.B F5
messages window scroll down

.TP 
.B F6
messages window scroll up

.TP 
.B F9
toggle menu bar

.TP 
.B F10
exit the client

.PP 
.B NOTE:
You can emulate the function keys F1 to F10 by pressing ESC first and
then a digit from `1' to `0'. For instance, ESC\-1 is equivalent to F1, 
ESC\-2 is F2, ESC\-0 is F10. ALT\-<digit> might also work.
To emulate Alt+F7 or Alt+F8 you can press ESC\-& or ESC\-* (or ALT\-&, ALT\-*).

.SS EDITBOX CONTROLS
.PP 
When you are presented with an edit box to type a string, you can use
the following keys:

.TP 
.B "arrow LEFT/RIGHT"
move cursor left/right

.TP 
.B HOME/END
move cursor to home/end

.TP 
.B INSERT
toggle insert mode

.TP 
.B DELETE
delete character at cursor and move the rest to the left

.TP 
.B ^T
delete word

.TP 
.B ^A
move one word left

.TP 
.B ^D 
move one word right

.TP
.B ^Y
cut line to clipboard (same as ^K-X, see below)

.TP 
.BR BACKSPACE " or " ^H
delete character on the left

.TP 
.B ESC
cancel editing (leaves string unmodified)

.TP 
.B ENTER
exit edit mode and save string

.TP 
.B "arrow UP/DOWN"
recall previous/next line from history

.TP 
.B ^K
enter escape mode

.SS EDITBOX ESCAPE MODE CONTROLS
.PP 
Escape mode is valid for exactly one keystroke and is automatically exited
after it. Typical operations in this mode are clipboard operations. 
Invalid keystrokes exit the mode. You cannot cut or copy a masked field 
(i.e. password), though you can paste on it. The following are valid keystrokes
in escape mode:

.TP 
.B B
set block begin

.TP 
.B C
copy whole line to clipboard buffer

.TP 
.B K
copy from block begin to current position

.TP 
.B V
paste buffer contents

.TP 
.B X
cut line to buffer

.TP 
.B Z
clear (zap) line (without affecting the buffer)

.TP 
.B P
push line into history and zap

.TP 
.B N
insert newline (shown as "|")

.TP 
.B ENTER
toggle multi-line mode; in multi-line mode ENTER adds
a newline character; the string will be accepted as soon as 
you turn off the mode (^K\-ENTER again)

.TP 
.B A
word left (to avoid conflicts with program `screen')

.TP 
.B D
word right

.TP 
.B T
delete word

.SS CONTACT/GROUP SELECTION MODE
.PP 
When you are presented with a list of contacts or groups, you can use
the following keys (note that this contact/group selection 
is required by some functions and appears
in the bottom line; do not confuse it with the contact list on the right that
can also be used as a menu):

.TP 
.BR ] " or " "arrow RIGHT/DOWN"
next entry

.TP 
.B [ " or " "arrow LEFT/UP"
previous entry

.TP 
.BR { " or " HOME
first entry

.TP 
.BR } " or " END
last entry

.TP 
.B q
show contact/group information

.TP 
.BR SPACE " or " ENTER
select

.TP 
.BR ESC " or " BACKSPACE " or " ^H
cancel selection


.SS TRANSFERS WINDOW CONTROLS
.PP 
When the transfers window is visible, you can use the following keys:

.TP 
.BR ] " or " "arrow DOWN"
next entry

.TP 
.BR [ " or " "arrow UP"
previous entry

.TP 
.BR } " or " "arrow RIGHT"
scroll left

.TP 
.BR { " or " "arrow LEFT"
scroll right

.TP 
.B a
accept incoming invitation

.TP 
.B r
reject incoming invitation

.TP 
.B c
cancel (abort) incoming/outgoing transfer or outgoing invitation

.TP 
.B q
information

.TP 
.B DELETE
delete entry

.TP 
.B ?
mini help

.SS TYPING NOTIFICATIONS
.PP 
When a user is typing a message, a typing notification is usually sent by the user's client.
Not all clients are able to send or receive typing notifications. However, gtmess both sends
and receives typing notifications. It is also able to do some kind of spoofing 
(see next section). When a typing notification is received, an exclamation mark (`!')
is displayed on the left of the user's name on the contact list. This means that the
user is typing a message in some switchboard window. Although it is possible to
know the specific s/b window, the current version does not distinguish between s/b windows.
Hopefully this will be fixed in the future.

.SH "ADVANCED FEATURES"
.PP 
There are some features of the protocol that gtmess takes advantage of, while
the original client for windows does not use them. These features are:

.TP 
.B *
Get notified when somebody has opened a chat window to you
(but has not sent a message yet).

.TP 
.B *
Allow you to log in with a different initial status.

.B NOTE:
If you log in as 
.BR "Appear Offline" ,
other users will still receive some offline events, at least under protocol version MSNP12.
Therefore, if you were offline in the first place,
they can suspect that you have just logged in. Gtmess will detect this `fact' and warn for
a user possibly appearing offline (aka Invisible) ;)

.TP 
.B *
Allow you to send a fake typing notification. This does not affect all clients.
It used to affect older versions of the original client!

.TP 
.B *
Allow you to know if somebody is online, but has blocked you.
To find out if a user is blocking you do the following: Open a switchboard window and
invite the user you think has blocked you (whom you see offline) to the session. 
If you receive an error 216, then the user has blocked you. 
Otherwise, if you receive an error 217 then we cannot tell.
When you receive error 217 there are two cases:
1) The user is really offline and you can't find out if he or she has blocked you. 
2) The user appears offline and hasn't blocked you. 
.br 
To sum up, if a user is logged in
and has blocked you, you will receive error 216.

.B NOTE:
This feature was actually available due to a bug at the original messenger server.
Nowadays the bug has been fixed, so block detection does not work any more. It is
mentioned here for historic purposes.


.SH "FILES"
.TP 
.B ~/.gtmess/
Main configuration directory. This directory relies in the user's home directory
and stores the following gtmess\-specific files:

.TP 
.B ~/.gtmess/aliases
The aliases file. It contains lines of the form
.IR email " " alias .
Lines beginning with `#' are considered to be comments, and therefore ignored.
The alias export feature provides a convenient way to create an initial version
of this file and then edit it manually.

.TP 
.B ~/.gtmess/config
The configuration file. It contains lines of the form
.IR variable = value .
Lines beginning  with `#' are considered to be comments, and therefore ignored.

.TP 
.B ~/.gtmess/received/
Received files from other users are stored
in this directory.

.TP 
.B ~/.gtmess/msn.log
The traffic log (see the
.I log_traffic 
variable).

.TP 
.B ~/.gtmess/notify.pip
This file is a named pipe that is used by the 
.I gtmess\-notify 
script to pop up notification
windows. It is not used directly in this version of gtmess, you can safely
remove it. ATTENTION: If the named pipe is not already open, 
an attempt to write to this file by a script through gtmess will block (unless the 
process that writes to the file runs in background)!

.TP 
.BI ~/.gtmess/ account /log/
The directory where console logs are stored.

.TP 
.BI ~/.gtmess/ account /per_contact
The file where per-contact settings are stored.
Each line contains the contact email and its specific
settings. The file is updated upon logout. Per-contact settings
can be modified from the menu and only those contacts whose settings have
been modified are stored.

.TP 
.B ./root.pem
Trusted root certificates, verified upon the initialization 
of an SSL connection. Gtmess first looks into the current directory
for this file, then into 
.B ~/.gtmess/ 
and then into the default data prefix, usually
.BR /usr/local/share/gtmess .

.TP 
.B /usr/local/share/gtmess/snd/
This is the location of the sound effect files. Note that the prefix
.B /usr/local/share/gtmess
might be different in your system.

.SH "BUGS"
This is a list of known bugs and limitations. 

If you send a file, you cannot see the IP of the receiver. 
When you receive a file, you cannot be server. 
When you send a file, you cannot be client.

There may occur conflicts in the authorization cookies of file transfers (though rare).

Messages are always assumed to be UTF\-8 encoded.

When running `gtmess -h', the default values shown for the scripts (*_exec) 
are overriden by the user configuration file.

You might get `socket read error' when trying to log in. 
Retrying usually solves this problem.

.SH "SEE ALSO"
.BR gtmess\-notify "(1), "
.BR "gtmess\_w" "(1), "
.BR README
file that comes along with the program; contains more up-to-date
information, especially on the keyboard shortcuts

.SH "MAKING OF"
.TP 
.B Operating System
Debian Linux, Mac OS X
.TP 
.B Desktop Environment
WindowMaker, KDE 4, Quartz
.TP 
.B Code Editor
NEdit, Qt Creator
.TP 
.B Sound Effects
ZynAddSubFX
.TP 
.B Audio Editor
Audacity
.TP 
.B Graphics Editor
The GIMP
.TP 
.B File Manager
Midnight Commander

.SH "ACKNOWLEDGMENTS"
Credits go to the following people:

.B "Mike Mintz"
for his excellent site on the MSN Messenger Protocol.
.br 
.I http://www.hypothetic.org/docs/msn/index.php

.B "L. Peter Deutsch"
for his MD5 module.

.B "Eric Rescorla"
for his article on SSL programming:
.I R "An introduction to OpenSSL Programming" .

.B Qi Wenmin, kuuldor, David Lefevre
for some useful patches they sent me.

.B "Kosta Fliangos"
for kindly providing his FreeBSD box for testing.

.B "The aMSN team"
for some useful ideas I got from their client.


.SH "CONTRIBUTORS"
.B "Tibor Billes"
has corrected quite a few bugs and is also actively contributing code 
to the project.

.SH "AUTHORS"
gtmess \- MSN Messenger client
.br 
Copyright (C) 2002\-2010  George M. Tzoumas

.PP 
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

.PP 
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

.PP 
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111\-1307  USA
